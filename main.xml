<!-- this project has been generated by everpano 3D v 1.3.4 -->
<krpano 
	debugmode="false"
	version="1.3.4"
	title="test3"
	idletime="60"
>
  <!--
	       _             _           
	 _ __ | |_   _  __ _(_)_ __  ___ 
	| '_ \| | | | |/ _` | | '_ \/ __|
	| |_) | | |_| | (_| | | | | \__ \
	| .__/|_|\__,_|\__, |_|_| |_|___/
	|_|            |___/             
	-->
  <include url="%VIEWER%/plugins/contextmenu.xml" />
  <include url="%VIEWER%/plugins/iphone_fullscreen_swipe.xml" />
  <!-- 
                     _           _     _____     _ 
     _ __  _ __ ___ (_) ___  ___| |_  |___ /  __| |
    | '_ \| '__/ _ \| |/ _ \/ __| __|   |_ \ / _` |
    | |_) | | | (_) | |  __/ (__| |_   ___) | (_| |
    | .__/|_|  \___// |\___|\___|\__| |____/ \__,_|
    |_|           |__/                             
    
    -->
  <include url="project3d.xml" />
  <action autorun="preinit" type="Javascript">
    <![CDATA[
        krpano.navPlugPan = "W1tbIj0iLCJcdTAwMDBucHlwajx3dFx1MDAwM3R5cmp9enp4Il0sWyI+IiwiQSIsIkYiLCJIIl0sWyJART07QEQ+QURARUVEQyIsIkZHSiIsIkJFPz1HRkdCQEdEREdBIl1dLFtbIj4iLCJcdTAwMDBucHlwaj17bFx1MDAwMXR6PCJdLFsiPSIsIkAiXSxbIjs/QD88Q0JBRkZFQ0E+QCIsIkdISyIsIkNFQj5DQkJDRUhIRENJIl1dLFtbIj8iLCJcdTAwMDBucHlwaj57bFx1MDAwMXR6PSJdLFsiPiIsIkUiLCJAQCIsIkFCIiwiSiIsIkNFIl0sWyI8REBBPT9IRURIQUBBRUEiLCJISUwiLCI+Sj9BSkdCSEpBQkZEIl1dLFtbIkAiLCJcdTAwMDBucHlwaj92dFx1MDAwMW5zcHkiXSxbIj0iXSxbIkhERj5ERURDQkRIQERBIiwiSUpNIiwiQ0tKQEtCR0pLRUdKSEoiXV0sW1siPj4iLCJcdTAwMDBucHlwakAzbjRtbFx1MDAwMXN9enp4Il0sWyI/IiwiRSIsIkBBIl0sWyJGRUU/RkRIRkpGQkhKRiIsIkpLTiIsIkBDQUNJSUxFTERFQ0UiXV0sW1siPj8iLCJcdTAwMDBucHlwakEzbjRtcG99enp4PCJdLFsiPyIsIkUiLCJAQCJdLFsiP0NASUdLSUNJR0ZCSyIsIktMTyIsIkFEQkVLRUZLSEhKTUoiXV0sW1siPkAiLCJcdTAwMDBucHlwakIzbjRtcG99enp4PSJdLFsiPyIsIkYiLCJIIl0sWyJJREhBQ0lMS0dERkdMRiIsIkxNUCIsIkJGSEhDSkVGR01NSk5KTSJdXSxbWyJEIiwiXHUwMDAwbnB5cGpDbHRcdTAwMDB3cDwiXSxbIj8iLCJGIiwiQEAiLCJBQiIsIkEiXSxbIkhER0JLRUhLSEtNSkhLIiwiTU5RIiwiR0pETEdOS0hPTU9GSCJdXSxbWyJFIiwiXHUwMDAwbnB5cGpEbHRcdTAwMDB3cD0iXSxbIkQiLCJHIiwiQD8iLCJBQyIsIkEiXSxbIkhNSUNHTEpHSExLSUdNIiwiTk9SIiwiREhKTUVMSU1NT01KTE9NIl1dLFtbIkYiLCJcdTAwMDBucHlwajw7M3g0bXBvfXp6eCJdLFsiPyIsIkYiLCJAPyIsIkFDIl0sWyJDSE9PREtMTE5GSkdLTU0iLCJPUFMiLCJFSU5KRk9KTU1KTk9OT1EiXV0sW1siPj0iLCJcdTAwMDBucHlwajw8M3g0bWxcdTAwMDFzfXp6eCJdLFsiRSIsIkciXSxbIkhLTkVHTE5IR09OUE5KIiwiUFFUIiwiRktKSUdKSVFQTE9NSVJKIl1dXQ==";
    ]]>
  </action>
  <!--

     
                       _             _             
     _ __   __ ___   _(_) __ _  __ _| |_ ___  _ __ 
    | '_ \ / _` \ \ / / |/ _` |/ _` | __/ _ \| '__|
    | | | | (_| |\ V /| | (_| | (_| | || (_) | |   
    |_| |_|\__,_| \_/ |_|\__, |\__,_|\__\___/|_|   
                         |___/                    
              

    leftkey                -> 65                            // A this is the key code that triggers the action
    rightkey               -> 68                            // D this is the key code that triggers the action
    forwardkey             -> 87                            // W this is the key code that triggers the action
    backwardkey            -> 83                            // S this is the key code that triggers the action
    upkey                  -> 81                            // Q this is the key code that triggers the action
    downkey                -> 69                            // E this is the key code that triggers the action
    angletolerance         -> 60                            // this is the angle used to poroject the cone that checks which scenes are on the sight of the user
    hotspotvisibility      -> scene                         // model | scene -> that attribute indicates whether I check against all hotspots in the model or just those visible from the pano
    notfoundmove           -> 10                            // the amount of move that it will perform when no image is found in specific direction
    notfoundtime           -> 0.3                           // the amount of time that it will be used to perform the move when no image is found
    navigationclick        -> true                          // allow to make click on the screen to navigate
    navigationspeed        -> 100                           // this is the speed that user will be moving around when navigation method is used
    loadsceneflags         -> MERGE|KEEPVIEW|KEEPMOVING     // the flags used to perform loadscene
    loadscenevars          -> null                          // the vars used to perform loadscene
    loadsceneblend         -> BLEND                         // the blend used to perform loadscene
    loadsceneblendtime     -> null                          // the blend time used to perform loadscene
    modeReturn             -> false                         // By using this mode the plugin will not perform any loadscene, just return to specific var the name of the scene
    returnaAction           -> null                         // the krpano action that will be called passing scene name and distance as arguments
    returnVRAction         -> null                          // the krpano action that will be called passing scene name and distance as arguments when user is in VR mode
    returnNotFoundAction   -> null                          // the krpano action that will be called when non scene is found while jumping
    returnNotFoundVRAction -> null                          // the krpano action that will be called when non scene is found while jumping in VR mode    
    depthmapuse            -> true                          // this attribute is for telling the plugin to perform a transition from scene 2 scene or just make a simple loadscene with zoom, so when we do not have depthmap is going to make nice transitions
    hapticfeedback         -> true                          // this attribute let us use the haptic feedback on the controllers to inform the user about if the plugin found or not a new scene after clicking on screen, not used in returnMode
    
    floorspots             -> false                         // show hotspots on the ground, used when no geometry is drawn in the model
    
    mouse_spot_idletime    -> 2000                          // time in milliseconds to make mouse spot disapear for inactivity             
    mouse_spot_r           -> 400                           // size of the circle (for the image created)       
    mouse_spot_size        -> 100                           // size of the mouse spot (for krpano)         
    mouse_spot_scale       -> 0.15                          // scale of the mouse spot             
    mouse_spot_r0          -> 200                           // radius of the biggest circle         
    mouse_spot_r1          -> 190                           // radius to enclose the big circle         
    mouse_spot_r2          -> 185                           // radius of the small circle        
    mouse_spot_r3          -> 130                           // radius to enclose the small circle         
    mouse_spot_color       -> rgb(250,250,250)              // color of the mouse spot, can be defined also as #fafafa                         
    floor_spot_r           -> 400                           // size of the circle (for the image created)               
    floor_spot_size        -> 100                           // size of the floor spot (for krpano)                 
    floor_spot_scale       -> 0.15                          // scale of the floor spot                         
    floor_spot_r0          -> 200                           // radius of the biggest circle                 
    floor_spot_r1          -> 130                           // radius to enclose the big circle                 
    floor_spot_color       -> rgb(250,250,250)              // color of the floor spot, can be defined also as #fafafa                                                 
    


    modeReturn = "true"
    returnAction = "sceneFound"
    returnNotFoundAction = "sceneNotFound"

    <action name="sceneFound" > 
        debug('we have found %1 at a distance of %2'); 
        loadscene(%1, null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.5)); 
        set(events.onviewloaded, null); 
        set(events.onkeydown, stoptween(view.tx|view.ty|view.tz);set(events.onkeydown,null); ); 
        tween(view.tx|view.ty|view.tz, calc('' + image.ox + '|' + image.oy + '|' + image.oz), 2, default, set(events.onkeydown,null);
    </action><action name="sceneFoundSpeed" > 
        debug('we have found %1 at a distance of %2'); set(distance,%2); set(speed,10); 
        calc(transitionTime,distance / speed); 
        loadscene(%1, null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.5)); 
        set(events.onviewloaded, null); 
        set(events.onkeydown, stoptween(view.tx|view.ty|view.tz);set(events.onkeydown,null); ); 
        tween(view.tx|view.ty|view.tz, calc('' + image.ox + '|' + image.oy + '|' + image.oz), get(transitionTime), default, set(events.onkeydown,null);
    </action><action name="sceneNotFound" > 
        txtsplit(%1,'|',p0x,p0z,p1x,p1z); 
        debug('no scene was found, current location is x:', p0x,' z:',p0z,' and click point is x:',p1x,' z:', p1z); 
        tween(view.tx|view.tz, calc(p1x + '|' + p1z) ,0.3, default,tween(view.tx|view.tz, calc( p0x + '|' + p0z) ,0.3, default));
    </action>
    
    -->
  <plugin name="navigator" keep="true" devices="html5"
        preload="false"
        url="%VIEWER%/plugins/navigator.js"
        leftKey = "65"
        rightKey = "68"
        forwardKey = "87"
        backwardKey = "83"
        upKey = "81"  
        downKey  = "69"
        
        
        
        angleTolerance = "60"
        hotspotVisibility = "scene" 
        notFoundMove = "10"
        notFoundTime = "0.3"
        navigationClick = "true"
        navigationSpeed = "80"
        loadsceneblendtime = "0.2"
        
        
        floorspots = "true"
        mouse_spot_idletime = "2000"
        mouse_spot_r = "400"
        mouse_spot_size = "100"
        mouse_spot_scale = "0.15"
        mouse_spot_r0 = "200"
        mouse_spot_r1 = "190"
        mouse_spot_r2 = "185"
        mouse_spot_r3 = "130"
        mouse_spot_color = "#fafafa"
        floor_spot_r = "400"
        floor_spot_size = "100"
        floor_spot_scale = "0.15"
        floor_spot_r0 = "200"
        floor_spot_r1 = "130"
        floor_spot_color = "#fafafa"
        
        editMode = "false"
    />
  <!--
                   _ _                        _             _   _             
    __      ____ _| | | __  _ __   __ ___   _(_) __ _  __ _| |_(_) ___  _ __  
    \ \ /\ / / _` | | |/ / | '_ \ / _` \ \ / / |/ _` |/ _` | __| |/ _ \| '_ \ 
     \ V  V / (_| | |   <  | | | | (_| |\ V /| | (_| | (_| | |_| | (_) | | | |
      \_/\_/ \__,_|_|_|\_\ |_| |_|\__,_| \_/ |_|\__, |\__,_|\__|_|\___/|_| |_|
                                                |___/                         
    walking navigation system
	-->
  <!-- <include url="%VIEWER%/plugins/depthmap_navigation.xml" /> -->
  <!-- 
                  _               
    __      _____| |____   ___ __ 
    \ \ /\ / / _ \ '_ \ \ / / '__|
     \ V  V /  __/ |_) \ V /| |   
      \_/\_/ \___|_.__/ \_/ |_|  

    
    webvr support 
    
    -->
  <include url="%VIEWER%/plugins/webvr.xml" />
  <!-- force enabled positional tracking -->
  <plugin name="webvr" postracking="true" />
  <!-- clear the default gamepad controls from the webvr.xml -->
  <action name="webvr_vrcontroller_gamepad_controls"></action>
  <!-- use depthbuffer for hotspots rendering -->
  <display depthbuffer="true" />
  <!-- 
      __       _ _                                              
     / _| ___ | | | _____      ___ __ ___   ___  _   _ ___  ___ 
    | |_ / _ \| | |/ _ \ \ /\ / / '_ ` _ \ / _ \| | | / __|/ _ \
    |  _| (_) | | | (_) \ V  V /| | | | | | (_) | |_| \__ \  __/
    |_|  \___/|_|_|\___/ \_/\_/ |_| |_| |_|\___/ \__,_|___/\___|

    include the followmouse tool 
    -->
  <include url="%VIEWER%/plugins/followmouse.xml" />
  <!-- 
                                                         _ 
      _____   _____ _ __ _ __   __ _ _ __   ___    _   _(_)
     / _ \ \ / / _ \ '__| '_ \ / _` | '_ \ / _ \  | | | | |
    |  __/\ V /  __/ |  | |_) | (_| | | | | (_) | | |_| | |
     \___| \_/ \___|_|  | .__/ \__,_|_| |_|\___/   \__,_|_|
                        |_|                                
    -->
  <plugin name="everpano_ui" keep="true" devices="html5" url="%VIEWER%/plugins/everpano_ui.js"

        vrPosition = "left"
        dollhousePosition = "left"
        panoModePosition = "left"
        fullscreenPosition = "left"
        
        menuOpen = "1"
        menuAnimation = "1"
        showPanoTitle = "true"
        showNextPrevious = "1"
        showNPTooltips = "1"

    />
  <!-- 
      __       _ _                                              
     / _| ___ | | | _____      ___ __ ___   ___  _   _ ___  ___ 
    | |_ / _ \| | |/ _ \ \ /\ / / '_ ` _ \ / _ \| | | / __|/ _ \
    |  _| (_) | | | (_) \ V  V /| | | | | | (_) | |_| \__ \  __/
    |_|  \___/|_|_|\___/ \_/\_/ |_| |_| |_|\___/ \__,_|___/\___|

    include the followmouse tool 
    -->
  <include url="%VIEWER%/plugins/followmouse.xml" />
  <!-- 

                     _            _                              
      ___ ___  _ __ | |_ _____  _| |_ _ __ ___   ___ _ __  _   _ 
     / __/ _ \| '_ \| __/ _ \ \/ / __| '_ ` _ \ / _ \ '_ \| | | |
    | (_| (_) | | | | ||  __/><| |_| | | | | |  __/ | | | |_| |
     \___\___/|_| |_|\__\___/_/\_\\__|_| |_| |_|\___|_| |_|\__,_|
                                                                 
    contextmenu with different viewing projections 
    
    -->
  <include url="%VIEWER%/plugins/contextmenu.xml" />
  <!-- automatically add floor-hotspots at scene locations -->
  <!-- This action/style is deprecated as it's managed by the navigator plugin -->
  <!-- 
	<action name="generate_floor_hotspots" autorun="onstart" scope="local">
		set(floorheight, 100.0);
		for(set(i,0), i LT style.count, inc(i),
			indexoftxt(is_everpano3D_style, get(style[get(i)].name), 'everpano3d_');
			if(is_everpano3D_style == 0,
				copy(st, style[get(i)]);
				addhotspot(calc('floorspot_' + (i+1)), hs);
				hs.loadstyle(floorspot);
				copy(hs.tx, st.ox);
				copy(hs.tz, st.oz);
				calc(hs.ty, floorheight + 1.0*st.oy - 1.0);
				copy(hs.linkedscene, st.linkedscene);
			);
		);
	</action><style name="floorspot" keep="true" type="text"
		css="font-size:20px;text-align:center;" vcenter="true"
		width="200" height="200" scale="0.07"
		bgroundedge="100" bgborder="2 0x000000 0" bgshadow="0 0 5 0xFFFFFF 1.0"
		oversampling="2" mipmapping="true" zorder="1"
		distorted="true" depth="0" depthbuffer="true"
		torigin="world" rotationorder="xyz" rx="-90"
		xalpha="0"
		alpha="0.5"
		onover.addevent="tween(scale,0.13); tween(alpha,0.8);"
		onout.addevent="tween(scale,0.07); tween(alpha,0.5);"
		onclick="flytopano();"
		/>

	-->
  <events ondoubleclick="delayedcall(1,set(keycode,32);events.onkeyup(););" />
  <action name="model3d_view">
		if(xml.scene != scene_model3d,
			loadscene(scene_model3d,null,MERGE|KEEPVIEW|KEEPMOVING|KEEPHOTSPOTS,NOBLEND,
				tween(view.oz,1000,2.0);
				set(control.invert,true);
			);
		);
  	</action>
  <action name="initial_model3d_view">
		lookto(180,50,90,default,true,true);
		tween(view.oz|view.tx|view.ty|view.tz,calc(''+800+'|'+image.ox+'|'+image.oy+'|'+image.oz));
		set(control.invert,true);
	</action>
  <action name="model3d_off">
		tween(view.oz, 0.0, 2.0);
		set(control.invert,false);
	</action>
  <action name="pano_view">
		set(control.invert,false);
		tween(view.tx|view.ty|view.tz|view.ox|view.oy|view.oz|view.fisheye,
			calc(''+image.ox+'|'+image.oy+'|'+image.oz+'|0|0|0|0'),
			2.0,
			default
		);
	</action>
  <action name="flytopano">
		set(control.invert,false);
  
		if(xml.scene != linkedscene,
			loadscene(get(linkedscene),null,MERGE|KEEPVIEW|KEEPMOVING|KEEPHOTSPOTS,BLEND(0.5));
		);
		tween(view.tx|view.ty|view.tz|view.ox|view.oy|view.oz|view.fisheye,
			calc(''+image.ox+'|'+image.oy+'|'+image.oz+'|0|0|0|0'),
			2.0,
			default,
		);
		lookto(get(view.hlookat),0);

	</action>
  <action name="setInitialPosition" autorun="onstart" >

        for(set(i,0), i LT style.count, inc(i),
            indexoftxt(is_everpano3D_style, get(style[get(i)].name), 'everpano3d_');
            if(is_everpano3D_style == 0 AND style[get(i)].linkedscene == xml.scene,
                copy(view.tx, style[get(i)].ox);
                copy(view.ty, style[get(i)].oy);
                copy(view.tz, style[get(i)].oz);
            );
        );
        
    </action>
</krpano>
